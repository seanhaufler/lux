class MainController < UIViewController

  def viewDidLoad
    # Get Power State from Device w/ Bluetooth
    updatePowerState

    self.view.addSubview(background)
    self.view.addSubview(powerButton)
    # self.view.addSubview(waveBox)
    # self.view.addSubview(arc)
    self.view.addSubview(brightnessSlider)
    self.view.addSubview(hueSlider)
    self.view.addSubview(brightnessLabel)
    self.view.addSubview(hueLabel)
    @start = Time.now
  end

  #############
  #  Actions  #
  #############

  def powerButtonPressed
    togglePowerState
    puts "Button Pressed!"
    puts @powerState
    powerButton.setImage(imageForPowerState, forState: UIControlStateNormal)

    # change arduino
  end

  def brightnessChanged
    if Time.now - @start > 1
      fl = (brightnessSlider.value * 2.55).floor
      val = sprintf("%g", fl)
      p val
      brightness val

      low_a = 3000
      high_a = 3500
      diff_a = high_a - low_a
      plus_a = hueSlider.value * diff_a / 100
      new_a = low_a + plus_a
      hu = new_a.to_i

      fl = (brightnessSlider.value * 2.55).floor
      bri = sprintf("%g", fl)

      arduinoCall bri, hu
      @start = Time.now
    end
  end

  def hueChanged
    if Time.now - @start > 1
      low = 1700
      high = 6500
      diff = high - low
      plus = hueSlider.value * diff / 100
      new = low + plus
      rounded = (new - (new % 10)).to_i
      x, y = Hues[rounded]

      hue x, y

      # ard hu
      low_a = 3000
      high_a = 3500
      diff_a = high_a - low_a
      plus_a = hueSlider.value * diff_a / 100
      new_a = low_a + plus_a
      hu = new_a.to_i

      fl = (brightnessSlider.value * 2.55).floor
      bri = sprintf("%g", fl)

      arduinoCall bri, hu
      @start = Time.now
    end
  end


  def togglePowerState
    @powerState = !@powerState
    change @powerState

    # ard hu
    low_a = 3000
    high_a = 3500
    diff_a = high_a - low_a
    plus_a = hueSlider.value * diff_a / 100
    new_a = low_a + plus_a
    hu = new_a.to_i

    fl = (brightnessSlider.value * 2.55).floor
    bri = sprintf("%g", fl)

    if !@powerState then
      arduinoCall "000", hu
    else
      arduinoCall bri, hu
    end
  end

  def updatePowerState
    @powerState = 0
  end

  def imageForPowerState
    if @powerState then
      UIImage.imageNamed('power_on.png')
    else
      UIImage.imageNamed('power_depressed.png')
    end
  end

  ##############
  # Properties #
  ##############

  def arc
    _frame = CGRect.new([0,300],[320,79])
    _image = UIImage.imageNamed("arc.png")
    _arc = UIImageView.alloc.initWithImage(_image)
    _arc
  end

  def background
      @background ||= begin
        _frame = UIScreen.mainScreen.bounds
        _image = UIImage.imageNamed("lux-logo.png")
        _background = UIImageView.alloc.initWithImage(_image)
        _background
     end
  end

  def brightnessSlider
    @brightnessSlider ||= begin
      _slider = UISlider.alloc.initWithFrame([[0, 280], [320, 40]])
      # Larger area to grab the _slider
      _slider.trackRectForBounds(CGRect.new([200,200],[100,100]))
      _slider.addTarget(self, action: 'brightnessChanged',
                                        forControlEvents:UIControlEventValueChanged)

      # Images
      full_image = UIImage.imageNamed("empty.gif")
      full_image = full_image.resizableImageWithCapInsets(UIEdgeInsetsZero, resizingMode: UIImageResizingModeTile)
      _slider.setMinimumTrackImage full_image, forState: UIControlStateNormal
      _slider.setMaximumTrackImage UIImage.imageNamed("full.gif"), forState: UIControlStateNormal
      _slider.setThumbImage UIImage.alloc(), forState: UIControlStateNormal

      # Values
      _slider.maximumValue = 100
      _slider.value = _slider.maximumValue/2
      _slider
    end
  end

  def brightnessLabel
    @brightnessLabel ||= begin
      _brightnessLabel = UILabel.alloc.initWithFrame([[15, 260], [280, 36]])
      _brightnessLabel.textColor = UIColor.whiteColor
      _brightnessLabel.font = UIFont.systemFontOfSize(13)
      _brightnessLabel.text = "Brightness"
      _brightnessLabel.backgroundColor = UIColor.clearColor
      _brightnessLabel
    end
  end

  def hueLabel
    @hueLabel ||= begin
      _hueLabel = UILabel.alloc.initWithFrame([[15, 180], [280, 36]])
      _hueLabel.textColor = UIColor.whiteColor
      _hueLabel.text = "Hue"
      _hueLabel.font = UIFont.systemFontOfSize(13)
      _hueLabel.backgroundColor = UIColor.clearColor
      _hueLabel
    end
  end

  def hueSlider
    @hueSlider ||= begin
       _slider = UISlider.alloc.initWithFrame([[0, 200], [320, 40]])
      # Larger area to grab the _slider
      _slider.trackRectForBounds(CGRect.new([200,200],[100,100]))
      _slider.addTarget(self, action: 'hueChanged',
                                        forControlEvents:UIControlEventValueChanged)

      # Images
      full_image = UIImage.imageNamed("empty.gif")
      full_image = full_image.resizableImageWithCapInsets(UIEdgeInsetsZero, resizingMode: UIImageResizingModeTile)
      _slider.setMinimumTrackImage full_image, forState: UIControlStateNormal
      _slider.setMaximumTrackImage UIImage.imageNamed("full.gif"), forState: UIControlStateNormal
      _slider.setThumbImage UIImage.alloc(), forState: UIControlStateNormal

      # Values
      _slider.maximumValue = 100
      _slider.value = _slider.maximumValue/2
      _slider
   end
  end

  def powerButton
    @powerButton ||= begin
      #depressed = UIImage.imageNamed('power_depressed.png')
      _powerButton = UIButton.buttonWithType(UIButtonTypeCustom)
      _powerButton.addTarget(self, action:'powerButtonPressed', forControlEvents:UIControlEventTouchUpInside)
      _powerButton.setImage(imageForPowerState, forState: UIControlStateNormal)
      # _powerButton.setImage(depressed, forState: UIControlStateHighlighted)
      _powerButton.frame = CGRect.new([100,343],[130,130])
      _powerButton
    end
  end

  def waveBox
    @waveBox ||= begin
      _frame = CGRect.new(
        [100, 100],
        [50,50]
        # [0, self.view.frame.origin.y + self.view.frame.size.height],
        # [pickerSize.width, pickerSize.height]
      )
      _waveBox = UIView.alloc.initWithFrame(_frame)
      _waveBox.setBackgroundColor(UIColor.redColor)
      _waveBox
    end
  end

  def splash
    @splash ||= begin
        _frame = UIScreen.mainScreen.bounds
        _image = UIImage.imageNamed("lux-logo.png")
        _splash = UIImageView.alloc.initWithImage(_image)
        _splash
    end
  end
  #### HUE
  #
  #

  def url
    'http://192.168.1.2/api/newdeveloper/lights/3/state'
  end

  def arduinoUrl
    'http://192.168.1.39/?'
  end

  def change val
    json = "{\"on\": #{val}}"
    call json
  end

  def brightness val
    json = "{\"on\": true, \"bri\": #{val}}"
    call json
  end

  def hue x, y
    json = "{\"on\": true, \"xy\": [#{x.round(3)},#{y.round(3)}]}"
    call json
  end

  def arduinoCall bri, hu
    u = arduinoUrl + ("%03d" % bri) + hu.to_s()
    p u
    BW::HTTP.get(u) do |response|

    end
  end

  def call json
    p json
    BW::HTTP.put(url, payload: json) do |response|
      p url
      p 'did request'
      if response.body
        p response.body.to_str
      else
        p "no body, ya fuck"
      end
    end
  end

  def on
    change true
  end

  def off
    change false
  end

  Hues = {1200=>[0.0, 0.0], 1210=>[0.0, 0.0], 1220=>[0.0, 0.0], 1230=>[0.0, 0.0], 1240=>[0.0, 0.0], 1250=>[0.0, 0.0], 1260=>[0.0, 0.0], 1270=>[0.0, 0.0], 1280=>[0.0, 0.0], 1290=>[0.0, 0.0], 1300=>[0.0, 0.0], 1310=>[0.0, 0.0], 1320=>[0.0, 0.0], 1330=>[0.0, 0.0], 1340=>[0.0, 0.0], 1350=>[0.0, 0.0], 1360=>[0.0, 0.0], 1370=>[0.0, 0.0], 1380=>[0.1213, 0.0289], 1390=>[0.136, 0.0598], 1400=>[0.1501, 0.0882], 1410=>[0.1637, 0.1144], 1420=>[0.1767, 0.1385], 1430=>[0.1892, 0.1606], 1440=>[0.2012, 0.1811], 1450=>[0.2128, 0.1999], 1460=>[0.2239, 0.2172], 1470=>[0.2346, 0.2331], 1480=>[0.2448, 0.2478], 1490=>[0.2547, 0.2613], 1500=>[0.2641, 0.2737], 1510=>[0.2732, 0.2852], 1520=>[0.2819, 0.2957], 1530=>[0.2903, 0.3054], 1540=>[0.2984, 0.3143], 1550=>[0.3061, 0.3225], 1560=>[0.3136, 0.33], 1570=>[0.3207, 0.3369], 1580=>[0.3276, 0.3433], 1590=>[0.3342, 0.3491], 1600=>[0.3405, 0.3545], 1610=>[0.3466, 0.3594], 1620=>[0.3525, 0.3639], 1630=>[0.3581, 0.368], 1640=>[0.3635, 0.3718], 1650=>[0.3687, 0.3753], 1660=>[0.3736, 0.3785], 1670=>[0.3784, 0.3814], 1680=>[0.383, 0.3841], 1690=>[0.3874, 0.3866], 1700=>[0.3916, 0.3888], 1710=>[0.3956, 0.3909], 1720=>[0.3995, 0.3928], 1730=>[0.4032, 0.3945], 1740=>[0.4067, 0.396], 1750=>[0.4102, 0.3975], 1760=>[0.4134, 0.3988], 1770=>[0.4166, 0.4], 1780=>[0.4196, 0.401], 1790=>[0.4224, 0.402], 1800=>[0.4252, 0.4029], 1810=>[0.4278, 0.4037], 1820=>[0.4303, 0.4045], 1830=>[0.4327, 0.4052], 1840=>[0.435, 0.4058], 1850=>[0.4372, 0.4063], 1860=>[0.4392, 0.4068], 1870=>[0.4412, 0.4073], 1880=>[0.4431, 0.4077], 1890=>[0.4449, 0.4081], 1900=>[0.4467, 0.4084], 1910=>[0.4483, 0.4087], 1920=>[0.4498, 0.409], 1930=>[0.4513, 0.4092], 1940=>[0.4527, 0.4094], 1950=>[0.4541, 0.4096], 1960=>[0.4553, 0.4098], 1970=>[0.4565, 0.41], 1980=>[0.4576, 0.4101], 1990=>[0.4587, 0.4103], 2000=>[0.4597, 0.4104], 2010=>[0.4606, 0.4105], 2020=>[0.4615, 0.4106], 2030=>[0.4623, 0.4106], 2040=>[0.4631, 0.4107], 2050=>[0.4639, 0.4108], 2060=>[0.4645, 0.4108], 2070=>[0.4652, 0.4109], 2080=>[0.4657, 0.4109], 2090=>[0.4663, 0.411], 2100=>[0.4668, 0.411], 2110=>[0.4672, 0.411], 2120=>[0.4676, 0.4111], 2130=>[0.468, 0.4111], 2140=>[0.4683, 0.4111], 2150=>[0.4686, 0.4111], 2160=>[0.4689, 0.4111], 2170=>[0.4691, 0.4112], 2180=>[0.4693, 0.4112], 2190=>[0.4695, 0.4112], 2200=>[0.4696, 0.4112], 2210=>[0.4697, 0.4112], 2220=>[0.4698, 0.4112], 2230=>[0.4699, 0.4112], 2240=>[0.4699, 0.4112], 2250=>[0.4699, 0.4112], 2260=>[0.4699, 0.4112], 2270=>[0.4698, 0.4112], 2280=>[0.4697, 0.4112], 2290=>[0.4696, 0.4112], 2300=>[0.4695, 0.4112], 2310=>[0.4694, 0.4112], 2320=>[0.4692, 0.4112], 2330=>[0.4691, 0.4112], 2340=>[0.4689, 0.4111], 2350=>[0.4687, 0.4111], 2360=>[0.4684, 0.4111], 2370=>[0.4682, 0.4111], 2380=>[0.4679, 0.4111], 2390=>[0.4676, 0.4111], 2400=>[0.4673, 0.411], 2410=>[0.467, 0.411], 2420=>[0.4667, 0.411], 2430=>[0.4664, 0.411], 2440=>[0.466, 0.411], 2450=>[0.4657, 0.4109], 2460=>[0.4653, 0.4109], 2470=>[0.4649, 0.4109], 2480=>[0.4645, 0.4108], 2490=>[0.4641, 0.4108], 2500=>[0.4637, 0.4108], 2510=>[0.4633, 0.4107], 2520=>[0.4628, 0.4107], 2530=>[0.4624, 0.4106], 2540=>[0.462, 0.4106], 2550=>[0.4615, 0.4106], 2560=>[0.461, 0.4105], 2570=>[0.4606, 0.4105], 2580=>[0.4601, 0.4104], 2590=>[0.4596, 0.4104], 2600=>[0.4591, 0.4103], 2610=>[0.4586, 0.4102], 2620=>[0.4581, 0.4102], 2630=>[0.4576, 0.4101], 2640=>[0.457, 0.41], 2650=>[0.4565, 0.41], 2660=>[0.456, 0.4099], 2670=>[0.4554, 0.4098], 2680=>[0.4549, 0.4098], 2690=>[0.4544, 0.4097], 2700=>[0.4538, 0.4096], 2710=>[0.4533, 0.4095], 2720=>[0.4527, 0.4094], 2730=>[0.4521, 0.4094], 2740=>[0.4516, 0.4093], 2750=>[0.451, 0.4092], 2760=>[0.4504, 0.4091], 2770=>[0.4499, 0.409], 2780=>[0.4493, 0.4089], 2790=>[0.4487, 0.4088], 2800=>[0.4481, 0.4087], 2810=>[0.4476, 0.4086], 2820=>[0.447, 0.4085], 2830=>[0.4464, 0.4083], 2840=>[0.4458, 0.4082], 2850=>[0.4452, 0.4081], 2860=>[0.4446, 0.408], 2870=>[0.444, 0.4079], 2880=>[0.4434, 0.4078], 2890=>[0.4428, 0.4076], 2900=>[0.4422, 0.4075], 2910=>[0.4416, 0.4074], 2920=>[0.441, 0.4072], 2930=>[0.4404, 0.4071], 2940=>[0.4398, 0.407], 2950=>[0.4392, 0.4068], 2960=>[0.4386, 0.4067], 2970=>[0.438, 0.4065], 2980=>[0.4374, 0.4064], 2990=>[0.4368, 0.4062], 3000=>[0.4362, 0.4061], 3010=>[0.4356, 0.4059], 3020=>[0.435, 0.4058], 3030=>[0.4344, 0.4056], 3040=>[0.4338, 0.4055], 3050=>[0.4332, 0.4053], 3060=>[0.4326, 0.4051], 3070=>[0.432, 0.405], 3080=>[0.4314, 0.4048], 3090=>[0.4308, 0.4046], 3100=>[0.4302, 0.4045], 3110=>[0.4296, 0.4043], 3120=>[0.429, 0.4041], 3130=>[0.4284, 0.4039], 3140=>[0.4278, 0.4038], 3150=>[0.4272, 0.4036], 3160=>[0.4266, 0.4034], 3170=>[0.426, 0.4032], 3180=>[0.4254, 0.403], 3190=>[0.4249, 0.4028], 3200=>[0.4243, 0.4026], 3210=>[0.4237, 0.4024], 3220=>[0.4231, 0.4023], 3230=>[0.4225, 0.4021], 3240=>[0.4219, 0.4019], 3250=>[0.4213, 0.4017], 3260=>[0.4207, 0.4015], 3270=>[0.4202, 0.4013], 3280=>[0.4196, 0.4011], 3290=>[0.419, 0.4008], 3300=>[0.4184, 0.4006], 3310=>[0.4178, 0.4004], 3320=>[0.4173, 0.4002], 3330=>[0.4167, 0.4], 3340=>[0.4161, 0.3998], 3350=>[0.4156, 0.3996], 3360=>[0.415, 0.3994], 3370=>[0.4144, 0.3992], 3380=>[0.4139, 0.3989], 3390=>[0.4133, 0.3987], 3400=>[0.4127, 0.3985], 3410=>[0.4122, 0.3983], 3420=>[0.4116, 0.3981], 3430=>[0.4111, 0.3978], 3440=>[0.4105, 0.3976], 3450=>[0.4099, 0.3974], 3460=>[0.4094, 0.3971], 3470=>[0.4088, 0.3969], 3480=>[0.4083, 0.3967], 3490=>[0.4077, 0.3965], 3500=>[0.4072, 0.3962], 3510=>[0.4067, 0.396], 3520=>[0.4061, 0.3958], 3530=>[0.4056, 0.3955], 3540=>[0.405, 0.3953], 3550=>[0.4045, 0.3951], 3560=>[0.404, 0.3948], 3570=>[0.4034, 0.3946], 3580=>[0.4029, 0.3943], 3590=>[0.4024, 0.3941], 3600=>[0.4018, 0.3939], 3610=>[0.4013, 0.3936], 3620=>[0.4008, 0.3934], 3630=>[0.4003, 0.3931], 3640=>[0.3998, 0.3929], 3650=>[0.3992, 0.3926], 3660=>[0.3987, 0.3924], 3670=>[0.3982, 0.3922], 3680=>[0.3977, 0.3919], 3690=>[0.3972, 0.3917], 3700=>[0.3967, 0.3914], 3710=>[0.3962, 0.3912], 3720=>[0.3957, 0.3909], 3730=>[0.3952, 0.3907], 3740=>[0.3947, 0.3904], 3750=>[0.3942, 0.3902], 3760=>[0.3937, 0.3899], 3770=>[0.3932, 0.3897], 3780=>[0.3927, 0.3894], 3790=>[0.3922, 0.3892], 3800=>[0.3917, 0.3889], 3810=>[0.3912, 0.3886], 3820=>[0.3907, 0.3884], 3830=>[0.3903, 0.3881], 3840=>[0.3898, 0.3879], 3850=>[0.3893, 0.3876], 3860=>[0.3888, 0.3874], 3870=>[0.3883, 0.3871], 3880=>[0.3879, 0.3869], 3890=>[0.3874, 0.3866], 3900=>[0.3869, 0.3863], 3910=>[0.3865, 0.3861], 3920=>[0.386, 0.3858], 3930=>[0.3855, 0.3856], 3940=>[0.3851, 0.3853], 3950=>[0.3846, 0.3851], 3960=>[0.3842, 0.3848], 3970=>[0.3837, 0.3845], 3980=>[0.3832, 0.3843], 3990=>[0.3828, 0.384], 4000=>[0.3823, 0.3838], 4010=>[0.3819, 0.3835], 4020=>[0.3814, 0.3832], 4030=>[0.381, 0.383], 4040=>[0.3806, 0.3827], 4050=>[0.3801, 0.3825], 4060=>[0.3797, 0.3822], 4070=>[0.3792, 0.382], 4080=>[0.3788, 0.3817], 4090=>[0.3784, 0.3814], 4100=>[0.3779, 0.3812], 4110=>[0.3775, 0.3809], 4120=>[0.3771, 0.3807], 4130=>[0.3767, 0.3804], 4140=>[0.3762, 0.3801], 4150=>[0.3758, 0.3799], 4160=>[0.3754, 0.3796], 4170=>[0.375, 0.3794], 4180=>[0.3746, 0.3791], 4190=>[0.3741, 0.3788], 4200=>[0.3737, 0.3786], 4210=>[0.3733, 0.3783], 4220=>[0.3729, 0.3781], 4230=>[0.3725, 0.3778], 4240=>[0.3721, 0.3775], 4250=>[0.3717, 0.3773], 4260=>[0.3713, 0.377], 4270=>[0.3709, 0.3768], 4280=>[0.3705, 0.3765], 4290=>[0.3701, 0.3762], 4300=>[0.3697, 0.376], 4310=>[0.3693, 0.3757], 4320=>[0.3689, 0.3755], 4330=>[0.3685, 0.3752], 4340=>[0.3681, 0.375], 4350=>[0.3677, 0.3747], 4360=>[0.3673, 0.3744], 4370=>[0.3669, 0.3742], 4380=>[0.3666, 0.3739], 4390=>[0.3662, 0.3737], 4400=>[0.3658, 0.3734], 4410=>[0.3654, 0.3732], 4420=>[0.365, 0.3729], 4430=>[0.3647, 0.3727], 4440=>[0.3643, 0.3724], 4450=>[0.3639, 0.3721], 4460=>[0.3636, 0.3719], 4470=>[0.3632, 0.3716], 4480=>[0.3628, 0.3714], 4490=>[0.3625, 0.3711], 4500=>[0.3621, 0.3709], 4510=>[0.3617, 0.3706], 4520=>[0.3614, 0.3704], 4530=>[0.361, 0.3701], 4540=>[0.3606, 0.3699], 4550=>[0.3603, 0.3696], 4560=>[0.3599, 0.3694], 4570=>[0.3596, 0.3691], 4580=>[0.3592, 0.3689], 4590=>[0.3589, 0.3686], 4600=>[0.3585, 0.3684], 4610=>[0.3582, 0.3681], 4620=>[0.3578, 0.3679], 4630=>[0.3575, 0.3676], 4640=>[0.3572, 0.3674], 4650=>[0.3568, 0.3671], 4660=>[0.3565, 0.3669], 4670=>[0.3561, 0.3666], 4680=>[0.3558, 0.3664], 4690=>[0.3555, 0.3661], 4700=>[0.3551, 0.3659], 4710=>[0.3548, 0.3656], 4720=>[0.3545, 0.3654], 4730=>[0.3541, 0.3651], 4740=>[0.3538, 0.3649], 4750=>[0.3535, 0.3646], 4760=>[0.3532, 0.3644], 4770=>[0.3528, 0.3642], 4780=>[0.3525, 0.3639], 4790=>[0.3522, 0.3637], 4800=>[0.3519, 0.3634], 4810=>[0.3515, 0.3632], 4820=>[0.3512, 0.3629], 4830=>[0.3509, 0.3627], 4840=>[0.3506, 0.3625], 4850=>[0.3503, 0.3622], 4860=>[0.35, 0.362], 4870=>[0.3497, 0.3617], 4880=>[0.3494, 0.3615], 4890=>[0.349, 0.3613], 4900=>[0.3487, 0.361], 4910=>[0.3484, 0.3608], 4920=>[0.3481, 0.3605], 4930=>[0.3478, 0.3603], 4940=>[0.3475, 0.3601], 4950=>[0.3472, 0.3598], 4960=>[0.3469, 0.3596], 4970=>[0.3466, 0.3594], 4980=>[0.3463, 0.3591], 4990=>[0.346, 0.3589], 5000=>[0.3457, 0.3587], 5010=>[0.3454, 0.3584], 5020=>[0.3452, 0.3582], 5030=>[0.3449, 0.358], 5040=>[0.3446, 0.3577], 5050=>[0.3443, 0.3575], 5060=>[0.344, 0.3573], 5070=>[0.3437, 0.357], 5080=>[0.3434, 0.3568], 5090=>[0.3432, 0.3566], 5100=>[0.3429, 0.3564], 5110=>[0.3426, 0.3561], 5120=>[0.3423, 0.3559], 5130=>[0.342, 0.3557], 5140=>[0.3418, 0.3554], 5150=>[0.3415, 0.3552], 5160=>[0.3412, 0.355], 5170=>[0.3409, 0.3548], 5180=>[0.3407, 0.3545], 5190=>[0.3404, 0.3543], 5200=>[0.3401, 0.3541], 5210=>[0.3398, 0.3539], 5220=>[0.3396, 0.3536], 5230=>[0.3393, 0.3534], 5240=>[0.339, 0.3532], 5250=>[0.3388, 0.353], 5260=>[0.3385, 0.3528], 5270=>[0.3383, 0.3525], 5280=>[0.338, 0.3523], 5290=>[0.3377, 0.3521], 5300=>[0.3375, 0.3519], 5310=>[0.3372, 0.3517], 5320=>[0.337, 0.3514], 5330=>[0.3367, 0.3512], 5340=>[0.3364, 0.351], 5350=>[0.3362, 0.3508], 5360=>[0.3359, 0.3506], 5370=>[0.3357, 0.3504], 5380=>[0.3354, 0.3501], 5390=>[0.3352, 0.3499], 5400=>[0.3349, 0.3497], 5410=>[0.3347, 0.3495], 5420=>[0.3344, 0.3493], 5430=>[0.3342, 0.3491], 5440=>[0.334, 0.3489], 5450=>[0.3337, 0.3487], 5460=>[0.3335, 0.3484], 5470=>[0.3332, 0.3482], 5480=>[0.333, 0.348], 5490=>[0.3327, 0.3478], 5500=>[0.3325, 0.3476], 5510=>[0.3323, 0.3474], 5520=>[0.332, 0.3472], 5530=>[0.3318, 0.347], 5540=>[0.3316, 0.3468], 5550=>[0.3313, 0.3466], 5560=>[0.3311, 0.3464], 5570=>[0.3309, 0.3462], 5580=>[0.3306, 0.346], 5590=>[0.3304, 0.3458], 5600=>[0.3302, 0.3455], 5610=>[0.3299, 0.3453], 5620=>[0.3297, 0.3451], 5630=>[0.3295, 0.3449], 5640=>[0.3293, 0.3447], 5650=>[0.329, 0.3445], 5660=>[0.3288, 0.3443], 5670=>[0.3286, 0.3441], 5680=>[0.3284, 0.3439], 5690=>[0.3281, 0.3437], 5700=>[0.3279, 0.3435], 5710=>[0.3277, 0.3433], 5720=>[0.3275, 0.3431], 5730=>[0.3273, 0.3429], 5740=>[0.327, 0.3427], 5750=>[0.3268, 0.3425], 5760=>[0.3266, 0.3424], 5770=>[0.3264, 0.3422], 5780=>[0.3262, 0.342], 5790=>[0.326, 0.3418], 5800=>[0.3258, 0.3416], 5810=>[0.3256, 0.3414], 5820=>[0.3253, 0.3412], 5830=>[0.3251, 0.341], 5840=>[0.3249, 0.3408], 5850=>[0.3247, 0.3406], 5860=>[0.3245, 0.3404], 5870=>[0.3243, 0.3402], 5880=>[0.3241, 0.34], 5890=>[0.3239, 0.3399], 5900=>[0.3237, 0.3397], 5910=>[0.3235, 0.3395], 5920=>[0.3233, 0.3393], 5930=>[0.3231, 0.3391], 5940=>[0.3229, 0.3389], 5950=>[0.3227, 0.3387], 5960=>[0.3225, 0.3385], 5970=>[0.3223, 0.3384], 5980=>[0.3221, 0.3382], 5990=>[0.3219, 0.338], 6000=>[0.3217, 0.3378], 6010=>[0.3215, 0.3376], 6020=>[0.3213, 0.3374], 6030=>[0.3211, 0.3372], 6040=>[0.3209, 0.3371], 6050=>[0.3207, 0.3369], 6060=>[0.3205, 0.3367], 6070=>[0.3203, 0.3365], 6080=>[0.3201, 0.3363], 6090=>[0.32, 0.3362], 6100=>[0.3198, 0.336], 6110=>[0.3196, 0.3358], 6120=>[0.3194, 0.3356], 6130=>[0.3192, 0.3354], 6140=>[0.319, 0.3353], 6150=>[0.3188, 0.3351], 6160=>[0.3187, 0.3349], 6170=>[0.3185, 0.3347], 6180=>[0.3183, 0.3346], 6190=>[0.3181, 0.3344], 6200=>[0.3179, 0.3342], 6210=>[0.3177, 0.334], 6220=>[0.3176, 0.3339], 6230=>[0.3174, 0.3337], 6240=>[0.3172, 0.3335], 6250=>[0.317, 0.3333], 6260=>[0.3168, 0.3332], 6270=>[0.3167, 0.333], 6280=>[0.3165, 0.3328], 6290=>[0.3163, 0.3327], 6300=>[0.3161, 0.3325], 6310=>[0.316, 0.3323], 6320=>[0.3158, 0.3322], 6330=>[0.3156, 0.332], 6340=>[0.3155, 0.3318], 6350=>[0.3153, 0.3316], 6360=>[0.3151, 0.3315], 6370=>[0.3149, 0.3313], 6380=>[0.3148, 0.3311], 6390=>[0.3146, 0.331], 6400=>[0.3144, 0.3308], 6410=>[0.3143, 0.3307], 6420=>[0.3141, 0.3305], 6430=>[0.3139, 0.3303], 6440=>[0.3138, 0.3302], 6450=>[0.3136, 0.33], 6460=>[0.3134, 0.3298], 6470=>[0.3133, 0.3297], 6480=>[0.3131, 0.3295], 6490=>[0.3129, 0.3293], 6500=>[0.3128, 0.3292]}

end
